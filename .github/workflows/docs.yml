name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'js/**'
      - 'go/**'
      - 'rust/**'
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths:
      - 'js/**'
      - 'go/**'
      - 'rust/**'
      - 'docs/**'
      - '*.md'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18'
  GO_VERSION: '1.21'
  RUST_VERSION: 'stable'

jobs:
  build-docs:
    name: Build All Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ env.RUST_VERSION }}
    
    - name: Install pandoc for markdown conversion
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
    
    - name: Install godoc
      run: go install golang.org/x/tools/cmd/godoc@latest
    
    - name: Install JavaScript dependencies
      working-directory: ./js
      run: npm ci
    
    - name: Generate JavaScript documentation
      working-directory: ./js
      run: npm run docs
    
    - name: Generate Go documentation
      working-directory: ./go
      run: |
        mkdir -p docs
        godoc -url="/pkg/github.com/TOPAY-FOUNDATION/TOPAY_Z512/go/" > docs/index.html
    
    - name: Generate Rust documentation
      working-directory: ./rust
      run: cargo doc --no-deps --document-private-items
    
    - name: Create unified documentation site
      run: |
        mkdir -p _site
        
        # Copy main documentation files
        cp -r docs/* _site/ 2>/dev/null || true
        
        # Copy JavaScript docs
        mkdir -p _site/js
        cp -r js/docs/* _site/js/ 2>/dev/null || true
        
        # Copy Go docs
        mkdir -p _site/go
        cp -r go/docs/* _site/go/ 2>/dev/null || true
        
        # Copy Rust docs
        mkdir -p _site/rust
        cp -r rust/target/doc/* _site/rust/ 2>/dev/null || true
        
        # Copy markdown documentation files
        cp docs/*.md _site/ 2>/dev/null || true
        
        # Convert markdown files to HTML for better web viewing
        if command -v pandoc &> /dev/null; then
          for md_file in _site/*.md; do
            if [ -f "$md_file" ]; then
              html_file="${md_file%.md}.html"
              pandoc "$md_file" -o "$html_file" --standalone --css=https://cdn.jsdelivr.net/npm/github-markdown-css@5.2.0/github-markdown-light.css
            fi
          done
        fi
        
        # Create main index.html
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>TOPAY-Z512 Documentation</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 2rem;
                    line-height: 1.6;
                    color: #333;
                }
                .header {
                    text-align: center;
                    margin-bottom: 3rem;
                    padding: 2rem;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    border-radius: 10px;
                }
                .docs-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 2rem;
                    margin-bottom: 3rem;
                }
                .doc-card {
                    border: 1px solid #e1e5e9;
                    border-radius: 8px;
                    padding: 1.5rem;
                    text-decoration: none;
                    color: inherit;
                    transition: transform 0.2s, box-shadow 0.2s;
                }
                .doc-card:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                }
                .doc-card h3 {
                    margin-top: 0;
                    color: #2c3e50;
                }
                .features {
                    background: #f8f9fa;
                    padding: 2rem;
                    border-radius: 8px;
                    margin-top: 2rem;
                }
                .features ul {
                    columns: 2;
                    column-gap: 2rem;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>TOPAY-Z512 Documentation</h1>
                <p>Quantum-safe cryptographic library with multi-language support</p>
            </div>
            
            <div class="docs-grid">
                <a href="js/" class="doc-card">
                    <h3>üì¶ JavaScript/TypeScript</h3>
                    <p>Complete API documentation for the JavaScript/TypeScript implementation of TOPAY-Z512.</p>
                    <p><strong>Installation:</strong> <code>npm install @topayfoundation/topayz512</code></p>
                </a>
                
                <a href="go/" class="doc-card">
                    <h3>üêπ Go</h3>
                    <p>Go package documentation with examples and API reference.</p>
                    <p><strong>Installation:</strong> <code>go get github.com/TOPAY-FOUNDATION/TOPAY_Z512/go</code></p>
                </a>
                
                <a href="rust/topayz512/" class="doc-card">
                    <h3>ü¶Ä Rust</h3>
                    <p>Rust crate documentation with comprehensive API coverage.</p>
                    <p><strong>Installation:</strong> <code>cargo add topay-z512</code></p>
                </a>
            </div>
            
            <div class="features">
                <h2>Key Features</h2>
                <ul>
                    <li>Quantum-safe cryptographic algorithms</li>
                    <li>High-performance key generation</li>
                    <li>Secure hash functions</li>
                    <li>Key encapsulation mechanisms (KEM)</li>
                    <li>Data fragmentation and reconstruction</li>
                    <li>Cross-platform compatibility</li>
                    <li>Memory-safe implementations</li>
                    <li>Comprehensive test coverage</li>
                </ul>
            </div>
            
            <div style="margin-top: 2rem; text-align: center;">
                <p><a href="README.html">üìñ Documentation Guide</a> | <a href="api_reference.html">üîß API Reference</a> | <a href="design_spec.html">üèóÔ∏è Design Specification</a></p>
            </div>
        </body>
        </html>
        EOF
        
        # Create .nojekyll file to disable Jekyll processing
        touch _site/.nojekyll
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  check-docs:
    name: Check Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install markdownlint
      run: npm install -g markdownlint-cli
    
    - name: Lint Markdown files
      run: markdownlint '**/*.md' --ignore node_modules --ignore target --ignore _site
    
    - name: Check for broken links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.github/markdown-link-check-config.json'